Algorithm explanation:
- initialize output of 1's
- moving forward through nums:
    - multiply corresponding entry in output by rolling product (initialized to 1)
    - update rolling product
- repeat moving backwards through nums
By doing this, each element is multiplied by the product of all the elements to the left of it and the product of all elements to the right of it, but never itself

Complexity analysis:
- Time: O(n), algorithm performs two passes over nums
- Space: O(1), not counting the output array, only a rolling product is stored